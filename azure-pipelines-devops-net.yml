# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- main
trigger:
- main

pool:
  vmImage: ubuntu-latest

#steps:
#- script: echo Hello, world!
#  displayName: 'Run a one-line script'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

steps:
- script: echo k8s say Hello, world!
  displayName: 'Run a one-line script'

- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/azure-terraform/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(public.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'Azure-resource-afor255jc'
    backendAzureRmResourceGroupName: 'terraform-backend-jcrada'
    backendAzureRmStorageAccountName: 'storageaccountjcrada'
    backendAzureRmContainerName: 'storageaccountjcradacontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'
    allowTelemetryCollection: true

